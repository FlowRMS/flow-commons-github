name: 'K8S Push'
description: 'Push Docker image to a container registry with environment support (development, staging, production)'

inputs:
  image-tag:
    description: 'Docker image tag in Digital Container Ocean Registry'
    required: false
    default: ${{ env.IMAGE_TAG }}

runs:
  using: 'composite'
  steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Install doctl
      shell: bash
      run: |
        curl -sL https://github.com/digitalocean/doctl/releases/download/v1.92.0/doctl-1.92.0-linux-amd64.tar.gz | tar xzv
        sudo mv doctl /usr/local/bin/
        doctl auth init -t ${{ env.DOCR_ACCESS_TOKEN }}

    - name: Set Environment
      uses: flowrms/flow-commons-github/.github/actions/github-set-env@main
      env:
        KUBE_CLUSTER_NAME_PRODUCTION: ${{ env.KUBE_CLUSTER_NAME_PRODUCTION }}
        KUBE_CLUSTER_NAME_STAGING: ${{ env.KUBE_CLUSTER_NAME_STAGING }}
        KUBE_CLUSTER_NAME_DEVELOPMENT: ${{ env.KUBE_CLUSTER_NAME_DEVELOPMENT }}

    - name: Configure Kubernetes cluster
      shell: bash
      run: |
        doctl kubernetes cluster kubeconfig save ${{ env.KUBE_CLUSTER_NAME }} --expiry-seconds 300

    - name: Install kubectl
      shell: bash
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    - name: Deploy application
      shell: bash
      run: |
        echo "Deploying application using image ${{ inputs.image-tag }}"
        envsubst < .k8s/deployment.yaml > deployment.prod.yaml
        kubectl apply -f deployment.prod.yaml

branding:
  icon: 'docker'
  color: 'cyan'
