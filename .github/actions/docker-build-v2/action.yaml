name: 'Docker Build'
description: 'Build docker image and push container registry with environment support (development, staging, production)'

inputs:
  dockerfile-path:
    description: 'Path to the Dockerfile'
    required: false
    default: './Dockerfile'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ env.WORKFLOW_TOKEN }}

    - name: Set Environment
      uses: flowrms/flow-commons-github/.github/actions/github-set-env@main

    - name: Override Maven Settings
      if: ${{ env.MAVEN_TOKEN && env.MAVEN_USERNAME }}
      shell: bash
      run: |
        sed -i 's/$POM_XML_SETTINGS_PASSWORD/'"${{ env.MAVEN_TOKEN }}"'/' .m2/settings.xml
        sed -i 's/$POM_XML_SETTINGS_USERNAME/'"${{ env.MAVEN_USERNAME }}"'/' .m2/settings.xml
        cat .m2/settings.xml

    - name: Override Application Settings
      if: ${{ env.KEYCLOACK_CLIENT_SECRET }}
      shell: bash
      run: |
        echo "Breakpoint--------------------------------------------------"
        sed -i 's/microservice.keycloak.client-secret=placeholder/microservice.keycloak.client-secret=${{ env.KEYCLOACK_CLIENT_SECRET }}/' src/main/resources/application.properties

    - name: Check for placeholder in application.properties
      shell: bash
      run: |
        if grep -q "microservice.keycloak.client-secret=placeholder" src/main/resources/application.properties; then
          echo "Error: microservice.keycloak.client-secret is set to placeholder. Please update the secret in the application.properties file."
          exit 1
        fi

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ inputs.dockerfile-path }}
        push: true
        tags: ${{ env.IMAGE_TAG }}
        build-args: |
          ENVIRONMENT=${{ env.ENVIRONMENT }}

branding:
  icon: 'docker'
  color: 'cyan'
